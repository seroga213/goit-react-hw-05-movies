{"version":3,"file":"static/js/544.cc975a86.chunk.js","mappings":"uMAEaA,E,OAAOC,GAAAA,GAAH,kE,SCoBjB,EAnBkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACbC,GAAWC,EAAAA,EAAAA,MACjB,OAAwB,IAApBF,EAASG,YACX,GAGE,wBACGH,EAASI,KAAI,SAAAC,GAAK,OACjB,SAACP,EAAD,WACE,SAAC,KAAD,CAAMQ,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMR,GAAhD,SACGI,EAAMK,MAAQL,EAAMK,MAAQL,EAAMM,QAF5BN,EAAME,GADA,KAU1B,C,8ECED,UAlBa,WACX,OAAsCK,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAZ,GACJS,EAAeT,EAAMa,QACtB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,KAGD,2BACE,SAAC,IAAD,CAAWpB,SAAUa,KAG1B,C,sBCpBD,SAASU,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOZ,GAEP,YADAM,EAAON,EAET,CAEIW,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOf,KAAKU,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C,uJClCMC,EAAU,mCACVC,EAAW,+BAEV,SAAe7B,IAAtB,4CAAO,OAAP,cAAO,+FACC8B,EADD,UACUD,EADV,qCAC+CD,GAD/C,SAEkBG,MAAMD,GAFxB,cAECE,EAFD,gBAGeA,EAASC,OAHxB,cAGC5C,EAHD,yBAIEA,GAJF,kEAOA,SAAe6C,EAAtB,+CAAO,OAAP,cAAO,WAAgCC,GAAhC,kFACCL,EADD,UACUD,EADV,iCAC2CD,EAD3C,4DACsGO,GADtG,SAEkBJ,MAAMD,GAFxB,cAECE,EAFD,gBAGeA,EAASC,OAHxB,cAGC5C,EAHD,yBAIEA,GAJF,kEAOA,SAAe+C,EAAtB,+CAAO,OAAP,cAAO,WAA+BC,GAA/B,kFACCP,EADD,UACUD,EADV,kBAC4BQ,EAD5B,oBAC+CT,EAD/C,4BAEkBG,MAAMD,GAFxB,cAECE,EAFD,gBAGeA,EAASC,OAHxB,cAGC5C,EAHD,yBAIEA,GAJF,kEAOA,SAAeiD,EAAtB,+CAAO,OAAP,cAAO,WAA0BD,GAA1B,kFACCP,EADD,UACUD,EADV,kBAC4BQ,EAD5B,4BACuDT,EADvD,4BAEkBG,MAAMD,GAFxB,cAECE,EAFD,gBAGeA,EAASC,OAHxB,cAGC5C,EAHD,yBAIEA,GAJF,kEAOA,SAAekD,EAAtB,+CAAO,OAAP,cAAO,WAA4BF,GAA5B,kFACCP,EADD,UACUD,EADV,kBAC4BQ,EAD5B,4BACuDT,EADvD,mCAEkBG,MAAMD,GAFxB,cAECE,EAFD,gBAGeA,EAASC,OAHxB,cAGC5C,EAHD,yBAIEA,GAJF,kE","sources":["components/MovieList/MovieList-styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\nfont-size: 16px;\nline-height: 1.3;\n  }\n`;","import { Link, useLocation } from 'react-router-dom';\nimport { Item } from './MovieList-styled';\n\nconst MovieList = ({ moviesAr }) => {\n  const location = useLocation();\n  if (moviesAr.length === 0) {\n    return;\n  } else {\n    return (\n      <ul>\n        {moviesAr.map(movie => (\n          <Item key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title ? movie.title : movie.name}\n            </Link>\n          </Item>\n        ))}\n      </ul>\n    );\n  }\n};\n\nexport default MovieList;","import { useState, useEffect } from 'react';\nimport { fetchPopularFilms } from '../../services/api';\nimport MovieList from '../../components/MovieList/MovieList';\n\nconst Home = () => {\n  const [moviesTrand, setMoviesTrand] = useState([]);\n\n  useEffect(() => {\n    fetchPopularFilms()\n      .then(movie => {\n        setMoviesTrand(movie.results);\n      })\n      .catch(error => console.log(error));\n  }, []);\n\n  return (\n    <main>\n      <MovieList moviesAr={moviesTrand} />\n    </main>\n  );\n};\n\nexport default Home;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const KEY_API = 'a40de3382fcc9ef9d15093113911e3dd';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchPopularFilms() {\n  const url = `${BASE_URL}/trending/all/day?api_key=${KEY_API}`;\n  const response = await fetch(url);\n  const movie = await response.json();\n  return movie;\n}\n\nexport async function fetchSearchFilms(searchWord) {\n  const url = `${BASE_URL}/search/movie?api_key=${KEY_API}&language=en-US&page=1&include_adult=false&query=${searchWord}`;\n  const response = await fetch(url);\n  const movie = await response.json();\n  return movie;\n}\n\nexport async function fetchDetailFilm(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${KEY_API}&language=en-US`;\n  const response = await fetch(url);\n  const movie = await response.json();\n  return movie;\n}\n\nexport async function fetchCasts(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY_API}&language=en-US`;\n  const response = await fetch(url);\n  const movie = await response.json();\n  return movie;\n}\n\nexport async function fetchReviews(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY_API}&language=en-US&page=1`;\n  const response = await fetch(url);\n  const movie = await response.json();\n  return movie;\n}"],"names":["Item","styled","moviesAr","location","useLocation","length","map","movie","to","id","state","from","title","name","useState","moviesTrand","setMoviesTrand","useEffect","fetchPopularFilms","then","results","catch","error","console","log","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","KEY_API","BASE_URL","url","fetch","response","json","fetchSearchFilms","searchWord","fetchDetailFilm","movieId","fetchCasts","fetchReviews"],"sourceRoot":""}